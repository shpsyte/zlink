// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200208214521_InitTab")]
    partial class InitTab
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Business.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Campaing")
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("CreateAt");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("End");

                    b.Property<string>("HideInfo")
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsPriority")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("OpenNewTab")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Parameters")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ShortText")
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("Start");

                    b.Property<string>("TargetLink")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<byte[]>("Thumb");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("Business.Models.TagData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Continent")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ContinentCode")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("Data");

                    b.Property<string>("District")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ISP")
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsMobile")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Iso")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Lat")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Lon")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SoClient")
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("TagId");

                    b.Property<string>("TimeZone")
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("UserId");

                    b.Property<string>("WebBrowserClient")
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("TagData");
                });

            modelBuilder.Entity("Business.Models.TagData", b =>
                {
                    b.HasOne("Business.Models.Tag", "Tag")
                        .WithMany("TagData")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
